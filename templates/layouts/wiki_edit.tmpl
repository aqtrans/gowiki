{{ define "title" }}Editing {{ .Wiki.Title }}{{ end }}

{{ define "content" }}
<link rel="stylesheet" href="/assets/css/tagdog.css">

    <main>
        <ul class="tabs">
            <li class="tabs-title"><a href="/{{.Wiki.Filename}}">{{svg "file-text2"}} View</a></li>
            <li class="tabs-title is-active"><a href="#">{{svg "pencil"}} Edit</a></li>
            <li class="tabs-title"><a href="/history/{{.Wiki.Filename}}">{{svg "history"}} History</a></li>
        </ul>    
        <form action="/save/{{.Wiki.Filename}}" method="POST" id="savewiki">
        Title:<input type="text" name="title" value="{{.Wiki.Frontmatter.Title}}"><br>
        {{ if .Wiki.Frontmatter.Favorite }}
            Favorite:<input id="favorite" type="checkbox" name="favorite" checked>
        {{ else }}
            Favorite:<input id="favorite" type="checkbox" name="favorite">
            </input>
        {{ end }}
        <br>
        Permission:
        <select id="permission" name="permission">
            {{ if eq .Wiki.Frontmatter.Permission "admin" }}
            <option value="admin" selected>Admin</option>
            <option value="private">Private</option>
            <option value="public">Public</option>
            {{ else if eq .Wiki.Frontmatter.Permission "private" }}
            <option value="admin">Admin</option>
            <option value="private" selected>Private</option>
            <option value="public">Public</option>
            {{ else if eq .Wiki.Frontmatter.Permission "public" }}
            <option value="admin">Admin</option>
            <option value="private">Private</option>
            <option value="public" selected>Public</option>
            {{ else }}
            <option value="admin">Admin</option>
            <option value="private">Private</option>
            <option value="public">Public</option>
            {{ end }}
        </select>
        <br>
        <div class="tag-field">
            Tags:
            <input type="text" id="tags" name="tags" placeholder="Separate tags with commas" value="{{ .Wiki.Frontmatter.Tags|jsTags }}" />
        </div>
        {{.Token}}
        <hr>
        <ul class="preview-tabs">
            <li class="tab-title"><a class="tablinks is-active" onclick="openTab(event, 'Edit')" id="defaultOpen">Edit</a></li>
            <li class="tab-title"><a class="tablinks" onclick="openTab(event, 'Preview')">Preview</a></li>
            <li class="tab-title"><a class="tablinks" onclick="openTab(event, 'Help')">Help</a></li>
        </ul>
        <div id="Edit" class="tabcontent">
            <div>
                <textarea name="editor" id="wikieditor">{{printf "%s" .Wiki.Content}}</textarea>
            </div>
        </div>
        <div id="Preview" class="tabcontent">
            <div>
                <article class="content" id="preview_content"></article>
            </div>
        </div>        
        <div id="Help" class="tabcontent">
            <div>
            <h2>Markdown Cheatsheet:</h2>
<pre><code>
Headings:
# Header
## Subheader

Text:
*italics*
**bold**
~~strikeout~~
super^script^
sub~script~
> quotation

Links:
[Title](http://google.com)
[Local Wiki Page]()
[/Local Wiki Page]()

Code:
```
some code
```
` one-line-code `
</code></pre>
            </div>
        </div>        
        <button type="submit" class="success button">Save</button>
        </form>
        <br>
        <form action="/delete/{{.Wiki.Filename}}" method="POST" id="deletewiki">
            {{.Token}}
            <button type="submit" class="delete button">Delete File</button>
        </form>
    </main>

{{ end }}
{{ define "extra_scripts" }}
<script src="/assets/js/jquery.min.js"></script>
<script src="/assets/js/tagdog.min.js"></script>
<script type="text/javascript" charset="utf-8">

(function() {
    "use strict";
    var options = {
        hiddenFieldSuffix: '_all'
    }    
    var tagFields = tagdog('.tag-field', options);
}).call(this);

function openTab(evt, tabName) {
    // Declare all variables
    var i, tabcontent, tablinks;

    // Get all elements with class="tabcontent" and hide them
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    // Get all elements with class="tablinks" and remove the class "active"
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" is-active", "");
    }

    // Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " is-active";

    if (tabName == "Preview") {
        var editortxt = document.getElementsByName("editor")[0].value;
        var csrf = document.getElementsByName("gorilla.csrf.Token")[0].value;
        $.ajax({
            type: "POST",
            url: "/md_render",
            data: { md: editortxt, 'gorilla.csrf.Token': csrf },
            success: function (msg) {
                document.getElementById("preview_content").innerHTML = msg;
            },
            dataType: "html"
        });
    }
}  
document.getElementById("defaultOpen").click();

</script>
{{ end }}