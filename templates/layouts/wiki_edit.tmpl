{{ define "title" }}Editing {{ .Wiki.Title }}{{ end }}
{{ define "content" }}
<link rel="stylesheet" href="/assets/css/tagdog.css">
        <ul class="tabs">
        <li class="tabs-title"><a href="/{{.Wiki.Filename}}">{{svg "file-text2"}} View</a></li>
        <li class="tabs-title is-active"><a href="#">{{svg "pencil"}} Edit</a></li>
        <li class="tabs-title"><a href="/history/{{.Wiki.Filename}}">{{svg "history"}} History</a></li>
        </ul>

    <main>
        <form action="/save/{{.Wiki.Filename}}" method="POST" id="savewiki">
        Title:<input type="text" name="title" value="{{.Wiki.Frontmatter.Title}}"><br>
        {{ if .Wiki.Frontmatter.Favorite }}
            Favorite:<input id="favorite" type="checkbox" name="favorite" checked>
        {{ else }}
            Favorite:<input id="favorite" type="checkbox" name="favorite">
            </input>
        {{ end }}
        <br>
        Permission:
        <select id="permission" name="permission">
            {{ if eq .Wiki.Frontmatter.Permission "admin" }}
            <option value="admin" selected>Admin</option>
            <option value="private">Private</option>
            <option value="public">Public</option>
            {{ else if eq .Wiki.Frontmatter.Permission "private" }}
            <option value="admin">Admin</option>
            <option value="private" selected>Private</option>
            <option value="public">Public</option>
            {{ else if eq .Wiki.Frontmatter.Permission "public" }}
            <option value="admin">Admin</option>
            <option value="private">Private</option>
            <option value="public" selected>Public</option>
            {{ else }}
            <option value="admin">Admin</option>
            <option value="private">Private</option>
            <option value="public">Public</option>
            {{ end }}
        </select>
        <br>
        <div class="tag-field">
            Tags:
            <input type="text" id="tags" name="tags" placeholder="Separate tags with commas" value="{{ .Wiki.Frontmatter.Tags|jsTags }}" />
        </div>
        {{.Token}}
        <hr>
        <div class="preview-tabs">
            <div class="tab">
                <input class="tab-radio" type="radio" id="tab-1" name="tab-group-1" checked>
                <label class="tab-label" for="tab-1">Edit</label>
                <div class="tab-panel">
                    <div class="tab-content">
                        <textarea name="editor" id="wikieditor">{{printf "%s" .Wiki.Content}}</textarea>
                    </div>
                </div>
            </div>
            <div class="tab">
                <input class="tab-radio" type="radio" id="tab-2" name="tab-group-1">
                <label class="tab-label" for="tab-2">Preview</label>
                <div class="tab-panel">
                    <div class="tab-content">
                        <article class="content" id="preview_content"></article>
                    </div>
                </div>
            </div>
        </div>
        <button type="submit" class="success button">Submit</button>
        </form>
    </main>

{{ end }}
{{ define "extra_scripts" }}
<script src="/assets/js/jquery.min.js"></script>
<script src="/assets/js/tagdog.min.js"></script>
<script type="text/javascript" charset="utf-8">

(function() {
    "use strict";
    var options = {
        hiddenFieldSuffix: '_all'
    }    
    var tagFields = tagdog('.tag-field', options);
}).call(this);
/*
var commonmark = window.commonmark;
var writer = new commonmark.HtmlRenderer();
var reader = new commonmark.Parser();
var textarea = document.getElementById("editor");
*/
//var initial_text = {{printf "%s" .Wiki.Content}};
//document.getElementsByName("editor")[0].value = initial_text;


document.getElementById("tab-2").onclick = function() {
    var editortxt = document.getElementsByName("editor")[0].value;
    var csrf = document.getElementsByName("gorilla.csrf.Token")[0].value;
    //var parsed = reader.parse(editortxt);
    //var result = writer.render(parsed);
    $.ajax({
        type: "POST",
        url: "/md_render",
        data: { md: editortxt, 'gorilla.csrf.Token': csrf },
        success: function (msg) {
            document.getElementById("preview_content").innerHTML = msg;
        },
        dataType: "html"
    });    
    //document.getElementById("preview_content").innerHTML=result;
};

</script>
{{ end }}