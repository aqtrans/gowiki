variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  PROD_TAG: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

stages:
  - build
  - test
  - deploy

build-image:
  stage: build
  script:
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

test-my-project:
  stage: test
  coverage: '/coverage: \d+\.\d+/'
  script:
    - docker pull $IMAGE_TAG  
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - docker run $IMAGE_TAG 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # Run ssh-agent (inside the build environment)
    - docker run $IMAGE_TAG eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - docker run $IMAGE_TAG ssh-add <(echo "$SSH_PRIVATE_KEY")

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    # - mkdir -p ~/.ssh
    # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # In order to properly check the server's host key, assuming you created the
    # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
    # instead.
    - docker run $IMAGE_TAG mkdir -p ~/.ssh
    - docker run $IMAGE_TAG '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'  
    #- git clone git@jba.io:aqtrans/gowiki-testdata.git 
    - docker run $IMAGE_TAG go get -d  
    - docker run $IMAGE_TAG go test -v
    - docker run $IMAGE_TAG go test -race
    - docker run $IMAGE_TAG go test -cover
    #- docker run -v $CI_PROJECT_DIR/gowiki-testdata:/go/src/wiki/tests/gowiki-testdata $IMAGE_TAG go test -v
    #- docker run -v $CI_PROJECT_DIR/gowiki-testdata:/go/src/wiki/tests/gowiki-testdata $IMAGE_TAG go test -race
    #- docker run -v $CI_PROJECT_DIR/gowiki-testdata:/go/src/wiki/tests/gowiki-testdata $IMAGE_TAG go test -cover

deploy_staging:
  stage: deploy
  script:
    - docker pull $IMAGE_TAG
    - docker push $IMAGE_TAG
  environment:
    name: staging
    url: https://gowiki.lisa.es.gy
  when: manual

deploy_prod:
  stage: deploy
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $PROD_TAG
    - docker push $PROD_TAG
  environment:
    name: production
    url: https://wiki.jba.io
  only:
    - master@go/wiki