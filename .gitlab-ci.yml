image: golang:latest
# See docs/examples here:
# http://doc.gitlab.com/ce/ci/quick_start/README.html
# http://doc.gitlab.com/ce/ci/yaml/README.html

# GitLab CI template for Go tests. Note this installs
# a new working copy of Go (1.5.2 in this case) 
# in a non-standard path such that sudo/root is not 
# needed for the install stage.

# note that this particular install-environment stage
# is overly verbose in order to debug anything tricky
# or weird in your environment - feel free to trim it 
# down as needed

before_script:
  - ln -s /builds /go/src/jba.io
  - cd /go/src/jba.io/go/wiki
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  # - mkdir -p ~/.ssh
  # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # In order to properly check the server's host key, assuming you created the
  # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
  # instead.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

stages:
  - install-environment
  - build
  - test
  - deploy  

install-go:
  stage: install-environment
  script:
    - go version
    - echo $PATH
    - echo $GOPATH
    - go env
    - which go

build-my-project:
  stage: build
  script:
    - go get -u github.com/kardianos/govendor
    - go get github.com/GeertJohan/go.rice/rice  
    - govendor sync
    - go get -d
    - rice embed-go
    - go build -o ./wiki
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    - apt-get update -y && apt-get install -y nodejs
    - cd scss/
    - npm install
    - npm install bower
    - node_modules/.bin/bower --allow-root install
    - npm build
    - node_modules/.bin/gulp sass
    - cd ../
  artifacts:
    paths:
      - wiki
      - assets/css/wiki.css
      - assets/css/wiki.css.map

test-my-project:
  stage: test
  script:
    - go get -u github.com/kardianos/govendor
    - govendor sync
    - go get -d
    - go test -v
    - go test -race
    - rm -rf tests/gowiki-testdata

deploy_staging:
  stage: deploy
  script:
    # Push to the Dokku server
    - cd /builds/go/wiki
    - rm -rf tests/gowiki-testdata
    - git checkout dokku
    - git config user.email "frink@es.gy"
    - git config user.name "frink.es.gy Gitlab CI"
    - git add wiki
    - git add -f vendor/
    - git add assets/css/wiki.css
    - git add assets/css/wiki.css.map
    - git rm -f tests/gowiki-testdata
    - git commit -m "Gitlab to Dokku dummy commit"
    - git remote add deploy dokku@192.168.1.146:gowiki
    - git branch
    - git push deploy dokku
  environment:
    name: staging
    url: http://gowiki.dokku.es.gy
#  only:
#  - master

deploy_prod:
  stage: deploy
  script:
    - go get github.com/GeertJohan/go.rice/rice   
    - rice embed-go
    - go build -o ./wiki
    - cp -r README.md deploy/
    - rsync -av --delete --exclude data/ --exclude http.log deploy/ golang@localhost:/home/golang/wiki/
    - ssh golang@localhost sudo systemctl restart golang-wiki    
  environment:
    name: production
    url: https://wiki.jba.io
  when: manual
#  only:
#  - master

